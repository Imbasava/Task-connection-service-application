{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/Taskers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskersList() {\n  _s();\n  var _location$state;\n  const [taskers, setTaskers] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const serviceId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.serviceId;\n  useEffect(() => {\n    const fetchTaskers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Tasker/Taskers', {\n          params: {\n            serviceId\n          }\n        });\n        setTaskers(response.data);\n      } catch (error) {\n        console.error('Error fetching taskers:', error);\n      }\n    };\n    if (serviceId) {\n      fetchTaskers();\n    }\n  }, [serviceId]);\n\n  // Handle booking action\n  const handleBookTasker = tasker => {\n    // Save tasker details in session storage\n    sessionStorage.setItem('taskerId', tasker.tasker_Profile_Id);\n    sessionStorage.setItem('hourlyRate', tasker.hourlyRate);\n\n    // Navigate to the Payment page\n    navigate('/payment', {\n      state: {\n        taskerId: tasker.tasker_Profile_Id\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center min-h-screen bg-gradient-to-r from-blue-100 via-indigo-100 to-pink-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white p-8 rounded-lg shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center text-gray-800 mb-6\",\n        children: \"Available Taskers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskers-container grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\",\n        children: taskers.length > 0 ? taskers.map(tasker => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasker-card bg-white p-4 rounded-lg shadow-lg transition transform hover:scale-105 hover:shadow-2xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/${tasker.taskerImage}` // Display tasker image\n            ,\n            alt: `${tasker.taskerName}'s profile`,\n            className: \"tasker-image w-full h-48 object-cover rounded-md mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"tasker-name text-xl font-semibold text-gray-800\",\n              children: tasker.taskerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"tasker-experience text-gray-600 mt-2\",\n              children: [\"Experience: \", tasker.experience, \" years\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"tasker-rate text-gray-600\",\n              children: [\"Hourly Rate: $\", tasker.hourlyRate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBookTasker(tasker),\n              className: \"book-button mt-4 w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition duration-300\",\n              children: \"Book Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, tasker.tasker_Profile_Id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-center col-span-full\",\n          children: \"No taskers available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskersList, \"DQZ/fsyn/kNUy/aiUR8jvNkPM7g=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = TaskersList;\nexport default TaskersList;\nvar _c;\n$RefreshReg$(_c, \"TaskersList\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","TaskersList","_s","_location$state","taskers","setTaskers","location","navigate","serviceId","state","fetchTaskers","response","get","params","data","error","console","handleBookTasker","tasker","sessionStorage","setItem","tasker_Profile_Id","hourlyRate","taskerId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","taskerImage","alt","taskerName","experience","onClick","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/Taskers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction TaskersList() {\n  const [taskers, setTaskers] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const serviceId = location.state?.serviceId;\n\n  useEffect(() => {\n    const fetchTaskers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/Tasker/Taskers', {\n          params: { serviceId },\n        });\n        setTaskers(response.data);\n      } catch (error) {\n        console.error('Error fetching taskers:', error);\n      }\n    };\n\n    if (serviceId) {\n      fetchTaskers();\n    }\n  }, [serviceId]);\n\n  // Handle booking action\n  const handleBookTasker = (tasker) => {\n    // Save tasker details in session storage\n    sessionStorage.setItem('taskerId', tasker.tasker_Profile_Id);\n    sessionStorage.setItem('hourlyRate', tasker.hourlyRate);\n\n    // Navigate to the Payment page\n    navigate('/payment', { state: { taskerId: tasker.tasker_Profile_Id } });\n  };\n\n  return (\n    <div className=\"flex justify-center items-center min-h-screen bg-gradient-to-r from-blue-100 via-indigo-100 to-pink-100\">\n      <div className=\"w-full max-w-4xl bg-white p-8 rounded-lg shadow-xl\">\n        <h1 className=\"text-3xl font-bold text-center text-gray-800 mb-6\">Available Taskers</h1>\n        \n        {/* Form-like container for taskers */}\n        <div className=\"taskers-container grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n          {taskers.length > 0 ? (\n            taskers.map((tasker) => (\n              <div\n                key={tasker.tasker_Profile_Id}\n                className=\"tasker-card bg-white p-4 rounded-lg shadow-lg transition transform hover:scale-105 hover:shadow-2xl\"\n              >\n                {/* Tasker Image */}\n                <img\n                  src={`http://localhost:5000/${tasker.taskerImage}`} // Display tasker image\n                  alt={`${tasker.taskerName}'s profile`}\n                  className=\"tasker-image w-full h-48 object-cover rounded-md mb-4\"\n                />\n                <div>\n                  <h2 className=\"tasker-name text-xl font-semibold text-gray-800\">{tasker.taskerName}</h2>\n                  <p className=\"tasker-experience text-gray-600 mt-2\">Experience: {tasker.experience} years</p>\n                  <p className=\"tasker-rate text-gray-600\">Hourly Rate: ${tasker.hourlyRate}</p>\n                  <button\n                    onClick={() => handleBookTasker(tasker)}\n                    className=\"book-button mt-4 w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition duration-300\"\n                  >\n                    Book Now\n                  </button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p className=\"text-gray-500 text-center col-span-full\">No taskers available.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskersList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}