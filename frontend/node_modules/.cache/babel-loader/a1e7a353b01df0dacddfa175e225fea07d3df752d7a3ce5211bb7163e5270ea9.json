{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/my-tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDisplay = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch booked tasks from backend\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(\"/api/get-booked-tasks\"); // Adjust the endpoint\n        setTasks(response.data.tasks); // Assuming response has an array of tasks\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto my-8 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center text-gray-800 mb-6\",\n      children: \"Your Booked Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-gray-200 rounded-lg shadow-lg hover:shadow-xl transition duration-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.image ? `/uploads/${task.image}` : \"/default-image.jpg\",\n          alt: task.title,\n          className: \"w-full h-48 object-cover rounded-t-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold text-gray-800\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mt-2\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Customer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), \" \", task.customerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Booking Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), \" \", new Date(task.bookingDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg font-semibold text-blue-600\",\n              children: [\"$\", task.totalAmount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => alert(\"View Task Details\") // Replace with actual functionality\n              ,\n              className: \"bg-blue-500 text-white font-semibold py-2 px-4 rounded-lg hover:bg-blue-600 transition duration-300\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center col-span-full\",\n        children: \"No tasks booked yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDisplay, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskDisplay;\nexport default TaskDisplay;\nvar _c;\n$RefreshReg$(_c, \"TaskDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskDisplay","_s","tasks","setTasks","fetchTasks","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","src","image","alt","title","description","customerName","Date","bookingDate","toLocaleDateString","totalAmount","toFixed","onClick","alert","id","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/my-tasks.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst TaskDisplay = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch booked tasks from backend\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(\"/api/get-booked-tasks\"); // Adjust the endpoint\n        setTasks(response.data.tasks); // Assuming response has an array of tasks\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  return (\n    <div className=\"container mx-auto my-8 p-4\">\n      <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">\n        Your Booked Tasks\n      </h2>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {tasks.length > 0 ? (\n          tasks.map((task) => (\n            <div\n              key={task.id}\n              className=\"bg-white border border-gray-200 rounded-lg shadow-lg hover:shadow-xl transition duration-300\"\n            >\n              <img\n                src={task.image ? `/uploads/${task.image}` : \"/default-image.jpg\"}\n                alt={task.title}\n                className=\"w-full h-48 object-cover rounded-t-lg\"\n              />\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">{task.title}</h3>\n                <p className=\"text-gray-600 mt-2\">{task.description}</p>\n                <p className=\"text-sm text-gray-500 mt-2\">\n                  <strong>Customer:</strong> {task.customerName}\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  <strong>Booking Date:</strong> {new Date(task.bookingDate).toLocaleDateString()}\n                </p>\n                <div className=\"mt-4 flex justify-between items-center\">\n                  <span className=\"text-lg font-semibold text-blue-600\">\n                    ${task.totalAmount.toFixed(2)}\n                  </span>\n                  <button\n                    onClick={() => alert(\"View Task Details\")} // Replace with actual functionality\n                    className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded-lg hover:bg-blue-600 transition duration-300\"\n                  >\n                    View Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"text-gray-500 text-center col-span-full\">No tasks booked yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}