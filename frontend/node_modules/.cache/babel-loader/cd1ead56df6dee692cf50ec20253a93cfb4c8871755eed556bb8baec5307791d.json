{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/Payment/payment2.js\",\n  _s = $RefreshSig$();\n// In routes/booking.js\napp.post('/api/update-payment', async (req, res) => {\n  const {\n    bookingId,\n    fullAmountPaid\n  } = req.body;\n  if (fullAmountPaid) {\n    try {\n      // Update the booking to mark it as fully paid\n      const result = await db.query('UPDATE booking SET paid_amount = total_amount WHERE booking_id = ?', [bookingId]);\n      if (result.affectedRows > 0) {\n        res.json({\n          success: true\n        });\n      } else {\n        res.json({\n          success: false,\n          message: 'Booking not found or already updated.'\n        });\n      }\n    } catch (error) {\n      console.error('Error updating booking:', error);\n      res.status(500).json({\n        success: false,\n        error: 'Database error'\n      });\n    }\n  } else {\n    res.status(400).json({\n      success: false,\n      message: 'Invalid payment request'\n    });\n  }\n});\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment2 = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    remainingAmount,\n    bookingId\n  } = location.state || {}; // Get the remaining amount and booking ID from passed state\n\n  const [remaining, setRemaining] = useState(remainingAmount || 0);\n  useEffect(() => {\n    if (!remainingAmount) {\n      alert('No remaining amount passed. Redirecting to booking page...');\n      navigate('/booking'); // Redirect if no amount is passed\n    }\n  }, [remainingAmount, navigate]);\n\n  // Function to handle the \"Pay\" button click\n  const handlePay = async () => {\n    try {\n      // Make an API call to update the payment status in the backend\n      const response = await axios.post('http://localhost:5000/api/update-payment', {\n        bookingId,\n        fullAmountPaid: true // Indicate that the remaining amount should be marked as paid\n      });\n      if (response.data.success) {\n        alert('Payment successful! Booking updated.');\n        navigate('/Mybooking'); // Redirect to the bookings page after successful payment\n      } else {\n        alert('Failed to update booking status.');\n      }\n    } catch (error) {\n      console.error('Error updating payment:', error);\n      alert('There was an error processing your payment.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gradient-to-r from-gray-800 via-gray-900 to-black min-h-screen flex items-center justify-center py-12 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl w-full flex bg-white rounded-xl shadow-lg overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/2 px-6 py-8 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold text-gray-800 mb-4\",\n          children: \"Remaining Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-800\",\n          children: [\"Remaining Amount: \\u20B9\", remaining]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePay // Trigger payment update on click\n          ,\n          className: \"mt-4 px-8 py-4 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition\",\n          children: \"Pay Remaining Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/Mybooking') // Navigate back to booking page\n          ,\n          className: \"mt-4 px-8 py-4 bg-gray-500 text-white font-semibold rounded-lg hover:bg-gray-600 transition\",\n          children: \"Back to Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment2, \"KMA4TSK2BMGAPQ2Y1JULcufXrwc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Payment2;\nexport default Payment2;\nvar _c;\n$RefreshReg$(_c, \"Payment2\");","map":{"version":3,"names":["app","post","req","res","bookingId","fullAmountPaid","body","result","db","query","affectedRows","json","success","message","error","console","status","useState","useEffect","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","Payment2","_s","navigate","location","remainingAmount","state","remaining","setRemaining","alert","handlePay","response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/Payment/payment2.js"],"sourcesContent":["// In routes/booking.js\napp.post('/api/update-payment', async (req, res) => {\n    const { bookingId, fullAmountPaid } = req.body;\n    \n    if (fullAmountPaid) {\n      try {\n        // Update the booking to mark it as fully paid\n        const result = await db.query(\n          'UPDATE booking SET paid_amount = total_amount WHERE booking_id = ?',\n          [bookingId]\n        );\n        \n        if (result.affectedRows > 0) {\n          res.json({ success: true });\n        } else {\n          res.json({ success: false, message: 'Booking not found or already updated.' });\n        }\n      } catch (error) {\n        console.error('Error updating booking:', error);\n        res.status(500).json({ success: false, error: 'Database error' });\n      }\n    } else {\n      res.status(400).json({ success: false, message: 'Invalid payment request' });\n    }\n  });\n  \n  import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Payment2 = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { remainingAmount, bookingId } = location.state || {}; // Get the remaining amount and booking ID from passed state\n\n  const [remaining, setRemaining] = useState(remainingAmount || 0);\n\n  useEffect(() => {\n    if (!remainingAmount) {\n      alert('No remaining amount passed. Redirecting to booking page...');\n      navigate('/booking');  // Redirect if no amount is passed\n    }\n  }, [remainingAmount, navigate]);\n\n  // Function to handle the \"Pay\" button click\n  const handlePay = async () => {\n    try {\n      // Make an API call to update the payment status in the backend\n      const response = await axios.post('http://localhost:5000/api/update-payment', {\n        bookingId,\n        fullAmountPaid: true  // Indicate that the remaining amount should be marked as paid\n      });\n\n      if (response.data.success) {\n        alert('Payment successful! Booking updated.');\n        navigate('/Mybooking');  // Redirect to the bookings page after successful payment\n      } else {\n        alert('Failed to update booking status.');\n      }\n    } catch (error) {\n      console.error('Error updating payment:', error);\n      alert('There was an error processing your payment.');\n    }\n  };\n\n  return (\n    <div className=\"bg-gradient-to-r from-gray-800 via-gray-900 to-black min-h-screen flex items-center justify-center py-12 px-6\">\n      <div className=\"max-w-7xl w-full flex bg-white rounded-xl shadow-lg overflow-hidden\">\n        <div className=\"w-full lg:w-1/2 px-6 py-8 bg-gray-50\">\n          <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Remaining Payment</h2>\n          <p className=\"text-lg text-gray-800\">Remaining Amount: â‚¹{remaining}</p>\n          <button\n            onClick={handlePay}  // Trigger payment update on click\n            className=\"mt-4 px-8 py-4 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition\"\n          >\n            Pay Remaining Amount\n          </button>\n          <button\n            onClick={() => navigate('/Mybooking')}  // Navigate back to booking page\n            className=\"mt-4 px-8 py-4 bg-gray-500 text-white font-semibold rounded-lg hover:bg-gray-600 transition\"\n          >\n            Back to Booking\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Payment2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}