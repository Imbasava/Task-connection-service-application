{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/Payment/payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const location = useLocation();\n  const {\n    taskerId\n  } = location.state || {};\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [contact, setContact] = useState('');\n  const [amount, setAmount] = useState(50000); // Amount in paise (₹500.00)\n\n  const handlePayment = async e => {\n    e.preventDefault();\n\n    // Generate order details on the backend\n    try {\n      const {\n        data\n      } = await axios.post('/api/payment/create-order', {\n        amount,\n        taskerId\n      });\n      const options = {\n        key: 'YOUR_RAZORPAY_KEY',\n        // Replace with your Razorpay key ID\n        amount: data.amount,\n        currency: 'INR',\n        name: 'Your Company Name',\n        description: 'Booking Tasker',\n        order_id: data.orderId,\n        // Razorpay order ID created in backend\n        handler: async function (response) {\n          // Send payment details to backend for verification\n          try {\n            await axios.post('/api/payment/verify', {\n              razorpay_payment_id: response.razorpay_payment_id,\n              razorpay_order_id: response.razorpay_order_id,\n              razorpay_signature: response.razorpay_signature,\n              taskerId\n            });\n            alert('Payment successful!');\n          } catch (error) {\n            alert('Payment verification failed.');\n          }\n        },\n        prefill: {\n          name,\n          email,\n          contact\n        },\n        notes: {\n          taskerId\n        },\n        theme: {\n          color: '#F37254'\n        }\n      };\n      const razorpay = new window.Razorpay(options);\n      razorpay.open();\n    } catch (error) {\n      console.error('Error in creating order:', error);\n      alert('Error in initiating payment. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container p-6 max-w-md mx-auto border rounded shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Payment for Tasker Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePayment,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"border rounded w-full py-2 px-3\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"border rounded w-full py-2 px-3\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700\",\n          children: \"Contact Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          className: \"border rounded w-full py-2 px-3\",\n          value: contact,\n          onChange: e => setContact(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 w-full\",\n        children: \"Pay Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"mjQznUb/KOVPR5R821W92zcFPio=\", false, function () {\n  return [useLocation];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useLocation","axios","jsxDEV","_jsxDEV","Payment","_s","location","taskerId","state","name","setName","email","setEmail","contact","setContact","amount","setAmount","handlePayment","e","preventDefault","data","post","options","key","currency","description","order_id","orderId","handler","response","razorpay_payment_id","razorpay_order_id","razorpay_signature","alert","error","prefill","notes","theme","color","razorpay","window","Razorpay","open","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/Payment/payment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Payment = () => {\n  const location = useLocation();\n  const { taskerId } = location.state || {};\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [contact, setContact] = useState('');\n  const [amount, setAmount] = useState(50000); // Amount in paise (₹500.00)\n\n  const handlePayment = async (e) => {\n    e.preventDefault();\n\n    // Generate order details on the backend\n    try {\n      const { data } = await axios.post('/api/payment/create-order', {\n        amount,\n        taskerId,\n      });\n\n      const options = {\n        key: 'YOUR_RAZORPAY_KEY', // Replace with your Razorpay key ID\n        amount: data.amount,\n        currency: 'INR',\n        name: 'Your Company Name',\n        description: 'Booking Tasker',\n        order_id: data.orderId, // Razorpay order ID created in backend\n        handler: async function (response) {\n          // Send payment details to backend for verification\n          try {\n            await axios.post('/api/payment/verify', {\n              razorpay_payment_id: response.razorpay_payment_id,\n              razorpay_order_id: response.razorpay_order_id,\n              razorpay_signature: response.razorpay_signature,\n              taskerId,\n            });\n            alert('Payment successful!');\n          } catch (error) {\n            alert('Payment verification failed.');\n          }\n        },\n        prefill: { name, email, contact },\n        notes: { taskerId },\n        theme: { color: '#F37254' },\n      };\n\n      const razorpay = new window.Razorpay(options);\n      razorpay.open();\n    } catch (error) {\n      console.error('Error in creating order:', error);\n      alert('Error in initiating payment. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"payment-container p-6 max-w-md mx-auto border rounded shadow-lg\">\n      <h2 className=\"text-2xl font-bold mb-4\">Payment for Tasker Booking</h2>\n      <form onSubmit={handlePayment}>\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700\">Name</label>\n          <input\n            type=\"text\"\n            className=\"border rounded w-full py-2 px-3\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700\">Email</label>\n          <input\n            type=\"email\"\n            className=\"border rounded w-full py-2 px-3\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700\">Contact Number</label>\n          <input\n            type=\"tel\"\n            className=\"border rounded w-full py-2 px-3\"\n            value={contact}\n            onChange={(e) => setContact(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 w-full\">\n          Pay Now\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Payment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}