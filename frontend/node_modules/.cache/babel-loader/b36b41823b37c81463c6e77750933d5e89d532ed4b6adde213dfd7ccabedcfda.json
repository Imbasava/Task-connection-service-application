{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/Payment/payment.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useEffect } from 'react';\nimport { useNavigate,useLocation } from 'react-router-dom';\nimport axios from 'axios';\nconst Payment = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { taskerId } = location.state || {};\n  const hourlyRate = parseFloat(sessionStorage.getItem('hourlyRate'));  // Fetch hourly rate from session storage\n  const userId = sessionStorage.getItem('userID');  // Fetch user ID from session storage\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [contact, setContact] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [startTime, setStartTime] = useState('08:00');\n  const [endTime, setEndTime] = useState('16:00');\n  const [totalHours, setTotalHours] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [partialAmount, setPartialAmount] = useState(0);\n  const [scriptLoaded, setScriptLoaded] = useState(false);  // State to track if Razorpay script is loaded\n\n  useEffect(() => {\n    const loadRazorpayScript = () => {\n      const script = document.createElement('script');\n      script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n      script.async = true;\n      script.onload = () => {\n        setScriptLoaded(true);  // Set to true once Razorpay script is loaded\n        console.log(\"Razorpay script loaded\");\n      };\n      script.onerror = () => {\n        console.error(\"Failed to load Razorpay script\");\n      };\n      document.body.appendChild(script);\n    };\n\n    loadRazorpayScript(); // Load Razorpay script when component mounts\n  }, []);\n\n  const calculateTotalHours = () => {\n    const start = new Date(`${startDate}T${startTime}`);\n    const end = new Date(`${endDate}T${endTime}`);\n\n    if (start && end && end > start) {\n      const timeDiff = end - start;\n      const hours = timeDiff / (1000 * 60 * 60);\n      const workHoursPerDay = 10;  // 8 AM to 4 PM\n\n      // Calculate full workdays within the date range\n      const totalDays = Math.floor(hours / 24);\n      const fullWorkdayHours = totalDays * workHoursPerDay;\n\n      // Calculate hours for partial days (start/end times)\n      const remainingHours = hours % 24;\n      const partialDayHours = Math.min(remainingHours, workHoursPerDay);\n\n      const totalWorkHours = fullWorkdayHours + partialDayHours;\n      setTotalHours(Math.ceil(totalWorkHours));  // Round up any partial hours to the next full hour\n\n      const amount = Math.ceil(totalWorkHours) * hourlyRate;\n      setTotalAmount(amount);\n      setPartialAmount(amount / 2);\n    } else {\n      setTotalHours(0);\n      setTotalAmount(0);\n      setPartialAmount(0);\n    }\n  };\n\n  const handlePayment = async (e) => {\n    e.preventDefault();\n\n    // Check if Razorpay script is loaded before initiating payment\n    if (!scriptLoaded) {\n      alert('Razorpay SDK is still loading. Please wait...');\n      return;\n    }\n\n    if (!window.Razorpay) {\n      alert('Razorpay SDK failed to load. Please check your connection.');\n      return;\n    }\n\n    const options = {\n      key: 'rzp_test_KA0MVYPAHSnecF', // Replace with your Razorpay key\n      amount: partialAmount * 100,  // Convert to paise\n      currency: 'INR',\n      name: 'Your Company Name',\n      description: 'Booking Tasker',\n      handler: async function (response) {\n        // Log the full response from Razorpay to verify it's correct\n        console.log('Razorpay response:', response);\n      \n        // You should have all the required information in the response object\n        const { razorpay_payment_id } = response;\n      \n        // If the required fields are available, proceed with the backend request\n        if (razorpay_payment_id) {\n          // Send the payment info and other booking details to the backend for storage\n          try {\n            const res = await axios.post('http://localhost:5000/api/payment-verification', {\n              razorpay_payment_id,\n              taskerId,\n              userId,\n              totalAmount,\n              partialAmount,\n              startDate,\n              endDate,\n              startTime,\n              endTime,\n              totalHours,\n              role:'customer'\n            });\n\n            if (res.data.success) {\n              alert('Payment verified and booking details saved!');\n              sessionStorage.setItem('role','customer');  // or 'customer'\n              navigate('/Taskerhome')\n\n            } else {\n              alert('Error saving booking details');\n            }\n          } catch (error) {\n            console.error('Error verifying payment:', error);\n            alert('Payment verification failed');\n          }\n        } else {\n          console.error('Missing Razorpay response details');\n        }\n      },\n      prefill: { name, email, contact },\n      notes: { taskerId, userId },\n      theme: { color: '#F37254' },\n    };\n\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n\n  return (\n    <div className=\"bg-gradient-to-r from-gray-800 via-gray-900 to-black min-h-screen flex items-center justify-center py-12 px-6\">\n      <div className=\"max-w-7xl w-full flex bg-white rounded-xl shadow-lg overflow-hidden\">\n        \n        <div className=\"w-full lg:w-1/2 px-6 py-8 bg-gray-50\">\n          <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Billing Information</h2>\n          <form onSubmit={handlePayment}>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <input\n                type=\"tel\"\n                placeholder=\"Contact\"\n                value={contact}\n                onChange={(e) => setContact(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">Start Date:</label>\n              <input\n                type=\"date\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">End Date:</label>\n              <input\n                type=\"date\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">Start Time:</label>\n              <input\n                type=\"time\"\n                value={startTime}\n                onChange={(e) => setStartTime(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">End Time:</label>\n              <input\n                type=\"time\"\n                value={endTime}\n                onChange={(e) => setEndTime(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <button\n                type=\"button\"\n                onClick={calculateTotalHours}\n                className=\"w-full py-2 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition\"\n              >\n                Calculate Hours & Amount\n              </button>\n              <p className=\"mt-2 text-gray-800\">Total Hours: {totalHours}</p>\n              <p className=\"mt-2 text-gray-800\">Total Amount: ₹{totalAmount}</p>\n              <p className=\"mt-2 text-gray-800\">Partial Amount (50%): ₹{partialAmount}</p>\n            </div>\n          </form>\n        </div>\n\n       \n        <div className=\"w-full lg:w-1/2 bg-indigo-600 text-white flex items-center justify-center py-8\">\n          <button\n            onClick={handlePayment}\n            className=\"px-8 py-4 bg-indigo-700 rounded-lg text-xl font-semibold hover:bg-indigo-800 transition\"\n          >\n            Pay Now\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Payment;\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    taskerId,\n    remaining_amount,\n    bookingId\n  } = location.state || {}; // Extract bookingId if passed\n\n  const hourlyRate = parseFloat(sessionStorage.getItem('hourlyRate')); // Fetch hourly rate from session storage\n  const userId = sessionStorage.getItem('userID'); // Fetch user ID from session storage\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [contact, setContact] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [startTime, setStartTime] = useState('08:00');\n  const [endTime, setEndTime] = useState('16:00');\n  const [totalHours, setTotalHours] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [partialAmount, setPartialAmount] = useState(0);\n  const [scriptLoaded, setScriptLoaded] = useState(false); // State to track if Razorpay script is loaded\n\n  useEffect(() => {\n    const loadRazorpayScript = () => {\n      const script = document.createElement('script');\n      script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n      script.async = true;\n      script.onload = () => {\n        setScriptLoaded(true); // Set to true once Razorpay script is loaded\n        console.log(\"Razorpay script loaded\"); // Confirm script load\n      };\n      script.onerror = () => {\n        console.error(\"Failed to load Razorpay script\");\n      };\n      document.body.appendChild(script);\n    };\n    loadRazorpayScript(); // Load Razorpay script when component mounts\n  }, []);\n  const calculateTotalHours = () => {\n    const start = new Date(`${startDate}T${startTime}`);\n    const end = new Date(`${endDate}T${endTime}`);\n    if (start && end && end > start) {\n      const timeDiff = end - start;\n      const hours = timeDiff / (1000 * 60 * 60);\n      const workHoursPerDay = 10; // 8 AM to 4 PM\n\n      // Calculate full workdays within the date range\n      const totalDays = Math.floor(hours / 24);\n      const fullWorkdayHours = totalDays * workHoursPerDay;\n\n      // Calculate hours for partial days (start/end times)\n      const remainingHours = hours % 24;\n      const partialDayHours = Math.min(remainingHours, workHoursPerDay);\n      const totalWorkHours = fullWorkdayHours + partialDayHours;\n      setTotalHours(Math.ceil(totalWorkHours)); // Round up any partial hours to the next full hour\n\n      const amount = Math.ceil(totalWorkHours) * hourlyRate;\n      setTotalAmount(amount);\n      setPartialAmount(amount / 2); // Partial amount is 50% of the total amount\n    } else {\n      setTotalHours(0);\n      setTotalAmount(0);\n      setPartialAmount(0);\n    }\n  };\n  const handleFullPayment = async () => {\n    if (bookingId) {\n      try {\n        const res = await axios.post('http://localhost:5000/api/mark-full-paid', {\n          booking_id: bookingId\n        });\n        if (res.data.success) {\n          alert('Booking marked as full paid!');\n          navigate('/Taskerhome'); // Redirect after successful payment\n        } else {\n          alert('Error marking as full paid');\n        }\n      } catch (error) {\n        console.error('Error updating full payment:', error);\n        alert('Error updating payment status');\n      }\n    } else {\n      alert('Booking ID is missing');\n    }\n  };\n  const handlePayment = async (e, isFullPayment = false) => {\n    e.preventDefault();\n\n    // Check if Razorpay script is loaded before initiating payment\n    if (!scriptLoaded) {\n      alert('Razorpay SDK is still loading. Please wait...');\n      return;\n    }\n    if (!window.Razorpay) {\n      alert('Razorpay SDK failed to load. Please check your connection.');\n      return;\n    }\n    const amountToPay = isFullPayment ? totalAmount : partialAmount;\n    const options = {\n      key: 'rzp_test_KA0MVYPAHSnecF',\n      // Replace with your Razorpay key\n      amount: amountToPay * 100,\n      // Convert to paise\n      currency: 'INR',\n      name: 'Your Company Name',\n      description: 'Booking Tasker',\n      handler: async function (response) {\n        const {\n          razorpay_payment_id\n        } = response;\n\n        // If the required fields are available, proceed with the backend request\n        if (razorpay_payment_id) {\n          try {\n            const res = await axios.post('http://localhost:5000/api/payment-verification', {\n              razorpay_payment_id,\n              taskerId,\n              userId,\n              totalAmount,\n              partialAmount,\n              startDate,\n              endDate,\n              startTime,\n              endTime,\n              totalHours,\n              role: 'customer',\n              isFullPayment\n            });\n            if (res.data.success) {\n              alert('Payment verified and booking details saved!');\n              sessionStorage.setItem('role', 'customer');\n              navigate('/Taskerhome');\n            } else {\n              alert('Error saving booking details');\n            }\n          } catch (error) {\n            console.error('Error verifying payment:', error);\n            alert('Payment verification failed');\n          }\n        } else {\n          console.error('Missing Razorpay response details');\n        }\n      },\n      prefill: {\n        name,\n        email,\n        contact\n      },\n      notes: {\n        taskerId,\n        userId\n      },\n      theme: {\n        color: '#F37254'\n      }\n    };\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gradient-to-r from-gray-800 via-gray-900 to-black min-h-screen flex items-center justify-center py-12 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl w-full flex bg-white rounded-xl shadow-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/2 px-6 py-8 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold text-gray-800 mb-4\",\n          children: \"Billing Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handlePayment(e),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              className: \"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              className: \"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              placeholder: \"Contact\",\n              value: contact,\n              onChange: e => setContact(e.target.value),\n              className: \"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700\",\n              children: \"Start Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700\",\n              children: \"End Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700\",\n              children: \"Start Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: startTime,\n              onChange: e => setStartTime(e.target.value),\n              className: \"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700\",\n              children: \"End Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: endTime,\n              onChange: e => setEndTime(e.target.value),\n              className: \"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg text-gray-700\",\n              children: [\"Total Hours: \", totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg text-gray-700\",\n              children: [\"Total Amount: \\u20B9\", totalAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg text-gray-700\",\n              children: [\"Partial Payment: \\u20B9\", partialAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), remaining_amount ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"w-full py-3 px-4 bg-blue-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 hover:bg-blue-700\",\n              onClick: handleFullPayment,\n              children: \"Pay Full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this) : scriptLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full py-3 px-4 bg-blue-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 hover:bg-blue-700\",\n              children: \"Proceed to Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/2 bg-blue-900 text-white py-8 px-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold\",\n          children: \"Payment Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), remaining_amount && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Remaining Amount: \\u20B9\", remaining_amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"RXlQD65772PbvKR+m5UbmurcRxk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","Payment","_s","navigate","location","taskerId","remaining_amount","bookingId","state","hourlyRate","parseFloat","sessionStorage","getItem","userId","name","setName","email","setEmail","contact","setContact","startDate","setStartDate","endDate","setEndDate","startTime","setStartTime","endTime","setEndTime","totalHours","setTotalHours","totalAmount","setTotalAmount","partialAmount","setPartialAmount","scriptLoaded","setScriptLoaded","loadRazorpayScript","script","document","createElement","src","async","onload","console","log","onerror","error","body","appendChild","calculateTotalHours","start","Date","end","timeDiff","hours","workHoursPerDay","totalDays","Math","floor","fullWorkdayHours","remainingHours","partialDayHours","min","totalWorkHours","ceil","amount","handleFullPayment","res","post","booking_id","data","success","alert","handlePayment","e","isFullPayment","preventDefault","window","Razorpay","amountToPay","options","key","currency","description","handler","response","razorpay_payment_id","role","setItem","prefill","notes","theme","color","razorpay","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/Payment/payment.js"],"sourcesContent":["/* import React, { useState, useEffect } from 'react';\nimport { useNavigate,useLocation } from 'react-router-dom';\nimport axios from 'axios';\nconst Payment = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { taskerId } = location.state || {};\n  const hourlyRate = parseFloat(sessionStorage.getItem('hourlyRate'));  // Fetch hourly rate from session storage\n  const userId = sessionStorage.getItem('userID');  // Fetch user ID from session storage\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [contact, setContact] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [startTime, setStartTime] = useState('08:00');\n  const [endTime, setEndTime] = useState('16:00');\n  const [totalHours, setTotalHours] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [partialAmount, setPartialAmount] = useState(0);\n  const [scriptLoaded, setScriptLoaded] = useState(false);  // State to track if Razorpay script is loaded\n\n  useEffect(() => {\n    const loadRazorpayScript = () => {\n      const script = document.createElement('script');\n      script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n      script.async = true;\n      script.onload = () => {\n        setScriptLoaded(true);  // Set to true once Razorpay script is loaded\n        console.log(\"Razorpay script loaded\");\n      };\n      script.onerror = () => {\n        console.error(\"Failed to load Razorpay script\");\n      };\n      document.body.appendChild(script);\n    };\n\n    loadRazorpayScript(); // Load Razorpay script when component mounts\n  }, []);\n\n  const calculateTotalHours = () => {\n    const start = new Date(`${startDate}T${startTime}`);\n    const end = new Date(`${endDate}T${endTime}`);\n\n    if (start && end && end > start) {\n      const timeDiff = end - start;\n      const hours = timeDiff / (1000 * 60 * 60);\n      const workHoursPerDay = 10;  // 8 AM to 4 PM\n\n      // Calculate full workdays within the date range\n      const totalDays = Math.floor(hours / 24);\n      const fullWorkdayHours = totalDays * workHoursPerDay;\n\n      // Calculate hours for partial days (start/end times)\n      const remainingHours = hours % 24;\n      const partialDayHours = Math.min(remainingHours, workHoursPerDay);\n\n      const totalWorkHours = fullWorkdayHours + partialDayHours;\n      setTotalHours(Math.ceil(totalWorkHours));  // Round up any partial hours to the next full hour\n\n      const amount = Math.ceil(totalWorkHours) * hourlyRate;\n      setTotalAmount(amount);\n      setPartialAmount(amount / 2);\n    } else {\n      setTotalHours(0);\n      setTotalAmount(0);\n      setPartialAmount(0);\n    }\n  };\n\n  const handlePayment = async (e) => {\n    e.preventDefault();\n\n    // Check if Razorpay script is loaded before initiating payment\n    if (!scriptLoaded) {\n      alert('Razorpay SDK is still loading. Please wait...');\n      return;\n    }\n\n    if (!window.Razorpay) {\n      alert('Razorpay SDK failed to load. Please check your connection.');\n      return;\n    }\n\n    const options = {\n      key: 'rzp_test_KA0MVYPAHSnecF', // Replace with your Razorpay key\n      amount: partialAmount * 100,  // Convert to paise\n      currency: 'INR',\n      name: 'Your Company Name',\n      description: 'Booking Tasker',\n      handler: async function (response) {\n        // Log the full response from Razorpay to verify it's correct\n        console.log('Razorpay response:', response);\n      \n        // You should have all the required information in the response object\n        const { razorpay_payment_id } = response;\n      \n        // If the required fields are available, proceed with the backend request\n        if (razorpay_payment_id) {\n          // Send the payment info and other booking details to the backend for storage\n          try {\n            const res = await axios.post('http://localhost:5000/api/payment-verification', {\n              razorpay_payment_id,\n              taskerId,\n              userId,\n              totalAmount,\n              partialAmount,\n              startDate,\n              endDate,\n              startTime,\n              endTime,\n              totalHours,\n              role:'customer'\n            });\n\n            if (res.data.success) {\n              alert('Payment verified and booking details saved!');\n              sessionStorage.setItem('role','customer');  // or 'customer'\n              navigate('/Taskerhome')\n\n            } else {\n              alert('Error saving booking details');\n            }\n          } catch (error) {\n            console.error('Error verifying payment:', error);\n            alert('Payment verification failed');\n          }\n        } else {\n          console.error('Missing Razorpay response details');\n        }\n      },\n      prefill: { name, email, contact },\n      notes: { taskerId, userId },\n      theme: { color: '#F37254' },\n    };\n\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n\n  return (\n    <div className=\"bg-gradient-to-r from-gray-800 via-gray-900 to-black min-h-screen flex items-center justify-center py-12 px-6\">\n      <div className=\"max-w-7xl w-full flex bg-white rounded-xl shadow-lg overflow-hidden\">\n        \n        <div className=\"w-full lg:w-1/2 px-6 py-8 bg-gray-50\">\n          <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Billing Information</h2>\n          <form onSubmit={handlePayment}>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <input\n                type=\"tel\"\n                placeholder=\"Contact\"\n                value={contact}\n                onChange={(e) => setContact(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">Start Date:</label>\n              <input\n                type=\"date\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">End Date:</label>\n              <input\n                type=\"date\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">Start Time:</label>\n              <input\n                type=\"time\"\n                value={startTime}\n                onChange={(e) => setStartTime(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">End Time:</label>\n              <input\n                type=\"time\"\n                value={endTime}\n                onChange={(e) => setEndTime(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <button\n                type=\"button\"\n                onClick={calculateTotalHours}\n                className=\"w-full py-2 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition\"\n              >\n                Calculate Hours & Amount\n              </button>\n              <p className=\"mt-2 text-gray-800\">Total Hours: {totalHours}</p>\n              <p className=\"mt-2 text-gray-800\">Total Amount: ₹{totalAmount}</p>\n              <p className=\"mt-2 text-gray-800\">Partial Amount (50%): ₹{partialAmount}</p>\n            </div>\n          </form>\n        </div>\n\n       \n        <div className=\"w-full lg:w-1/2 bg-indigo-600 text-white flex items-center justify-center py-8\">\n          <button\n            onClick={handlePayment}\n            className=\"px-8 py-4 bg-indigo-700 rounded-lg text-xl font-semibold hover:bg-indigo-800 transition\"\n          >\n            Pay Now\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Payment;\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Payment = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { taskerId, remaining_amount, bookingId } = location.state || {}; // Extract bookingId if passed\n\n  const hourlyRate = parseFloat(sessionStorage.getItem('hourlyRate')); // Fetch hourly rate from session storage\n  const userId = sessionStorage.getItem('userID'); // Fetch user ID from session storage\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [contact, setContact] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [startTime, setStartTime] = useState('08:00');\n  const [endTime, setEndTime] = useState('16:00');\n  const [totalHours, setTotalHours] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [partialAmount, setPartialAmount] = useState(0);\n  const [scriptLoaded, setScriptLoaded] = useState(false); // State to track if Razorpay script is loaded\n\n  useEffect(() => {\n    const loadRazorpayScript = () => {\n      const script = document.createElement('script');\n      script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n      script.async = true;\n      script.onload = () => {\n        setScriptLoaded(true); // Set to true once Razorpay script is loaded\n        console.log(\"Razorpay script loaded\"); // Confirm script load\n      };\n      script.onerror = () => {\n        console.error(\"Failed to load Razorpay script\");\n      };\n      document.body.appendChild(script);\n    };\n\n    loadRazorpayScript(); // Load Razorpay script when component mounts\n  }, []);\n\n  const calculateTotalHours = () => {\n    const start = new Date(`${startDate}T${startTime}`);\n    const end = new Date(`${endDate}T${endTime}`);\n\n    if (start && end && end > start) {\n      const timeDiff = end - start;\n      const hours = timeDiff / (1000 * 60 * 60);\n      const workHoursPerDay = 10; // 8 AM to 4 PM\n\n      // Calculate full workdays within the date range\n      const totalDays = Math.floor(hours / 24);\n      const fullWorkdayHours = totalDays * workHoursPerDay;\n\n      // Calculate hours for partial days (start/end times)\n      const remainingHours = hours % 24;\n      const partialDayHours = Math.min(remainingHours, workHoursPerDay);\n\n      const totalWorkHours = fullWorkdayHours + partialDayHours;\n      setTotalHours(Math.ceil(totalWorkHours)); // Round up any partial hours to the next full hour\n\n      const amount = Math.ceil(totalWorkHours) * hourlyRate;\n      setTotalAmount(amount);\n      setPartialAmount(amount / 2); // Partial amount is 50% of the total amount\n    } else {\n      setTotalHours(0);\n      setTotalAmount(0);\n      setPartialAmount(0);\n    }\n  };\n\n  const handleFullPayment = async () => {\n    if (bookingId) {\n      try {\n        const res = await axios.post('http://localhost:5000/api/mark-full-paid', { booking_id: bookingId });\n\n        if (res.data.success) {\n          alert('Booking marked as full paid!');\n          navigate('/Taskerhome'); // Redirect after successful payment\n        } else {\n          alert('Error marking as full paid');\n        }\n      } catch (error) {\n        console.error('Error updating full payment:', error);\n        alert('Error updating payment status');\n      }\n    } else {\n      alert('Booking ID is missing');\n    }\n  };\n\n  const handlePayment = async (e, isFullPayment = false) => {\n    e.preventDefault();\n\n    // Check if Razorpay script is loaded before initiating payment\n    if (!scriptLoaded) {\n      alert('Razorpay SDK is still loading. Please wait...');\n      return;\n    }\n\n    if (!window.Razorpay) {\n      alert('Razorpay SDK failed to load. Please check your connection.');\n      return;\n    }\n\n    const amountToPay = isFullPayment ? totalAmount : partialAmount;\n\n    const options = {\n      key: 'rzp_test_KA0MVYPAHSnecF', // Replace with your Razorpay key\n      amount: amountToPay * 100, // Convert to paise\n      currency: 'INR',\n      name: 'Your Company Name',\n      description: 'Booking Tasker',\n      handler: async function (response) {\n        const { razorpay_payment_id } = response;\n\n        // If the required fields are available, proceed with the backend request\n        if (razorpay_payment_id) {\n          try {\n            const res = await axios.post('http://localhost:5000/api/payment-verification', {\n              razorpay_payment_id,\n              taskerId,\n              userId,\n              totalAmount,\n              partialAmount,\n              startDate,\n              endDate,\n              startTime,\n              endTime,\n              totalHours,\n              role: 'customer',\n              isFullPayment\n            });\n\n            if (res.data.success) {\n              alert('Payment verified and booking details saved!');\n              sessionStorage.setItem('role', 'customer');\n              navigate('/Taskerhome');\n            } else {\n              alert('Error saving booking details');\n            }\n          } catch (error) {\n            console.error('Error verifying payment:', error);\n            alert('Payment verification failed');\n          }\n        } else {\n          console.error('Missing Razorpay response details');\n        }\n      },\n      prefill: { name, email, contact },\n      notes: { taskerId, userId },\n      theme: { color: '#F37254' },\n    };\n\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n\n  return (\n    <div className=\"bg-gradient-to-r from-gray-800 via-gray-900 to-black min-h-screen flex items-center justify-center py-12 px-6\">\n      <div className=\"max-w-7xl w-full flex bg-white rounded-xl shadow-lg overflow-hidden\">\n        {/* Left side for Billing Information */}\n        <div className=\"w-full lg:w-1/2 px-6 py-8 bg-gray-50\">\n          <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Billing Information</h2>\n          <form onSubmit={(e) => handlePayment(e)}>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <input\n                type=\"tel\"\n                placeholder=\"Contact\"\n                value={contact}\n                onChange={(e) => setContact(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">Start Date:</label>\n              <input\n                type=\"date\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">End Date:</label>\n              <input\n                type=\"date\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">Start Time:</label>\n              <input\n                type=\"time\"\n                value={startTime}\n                onChange={(e) => setStartTime(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n              <label className=\"block text-gray-700\">End Time:</label>\n              <input\n                type=\"time\"\n                value={endTime}\n                onChange={(e) => setEndTime(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n\n              <p className=\"text-lg text-gray-700\">Total Hours: {totalHours} hours</p>\n              <p className=\"text-lg text-gray-700\">Total Amount: ₹{totalAmount}</p>\n              <p className=\"text-lg text-gray-700\">Partial Payment: ₹{partialAmount}</p>\n\n              {remaining_amount ? (\n                <button\n                  type=\"button\"\n                  className=\"w-full py-3 px-4 bg-blue-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 hover:bg-blue-700\"\n                  onClick={handleFullPayment}\n                >\n                  Pay Full\n                </button>\n              ) : (\n                scriptLoaded && (\n                  <button\n                    type=\"submit\"\n                    className=\"w-full py-3 px-4 bg-blue-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 hover:bg-blue-700\"\n                  >\n                    Proceed to Payment\n                  </button>\n                )\n              )}\n            </div>\n          </form>\n        </div>\n\n        {/* Right side for Payment Details */}\n        <div className=\"w-full lg:w-1/2 bg-blue-900 text-white py-8 px-6\">\n          <h2 className=\"text-2xl font-semibold\">Payment Details</h2>\n          {remaining_amount && <p className=\"text-lg\">Remaining Amount: ₹{remaining_amount}</p>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Payment;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}