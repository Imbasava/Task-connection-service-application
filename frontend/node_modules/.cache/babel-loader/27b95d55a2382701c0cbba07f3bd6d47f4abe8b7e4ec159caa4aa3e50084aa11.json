{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/my-tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const taskerId = sessionStorage.getItem('userId'); // Assuming tasker ID is in session storage\n        const response = await axios.get(`/api/tasker/my-tasks/${taskerId}`);\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Customer Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }, this), \" \", task.customerName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }, this), \" \", task.customerPhone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Service:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }, this), \" \", task.serviceName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTasksPage, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = MyTasksPage;\nexport default MyTasksPage;\nvar _c;\n$RefreshReg$(_c, \"MyTasksPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MyTasksPage","_s","tasks","setTasks","fetchTasks","taskerId","sessionStorage","getItem","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","className","customerName","customerPhone","serviceName","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/my-tasks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst MyTasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const taskerId = sessionStorage.getItem('userId'); // Assuming tasker ID is in session storage\n        const response = await axios.get(`/api/tasker/my-tasks/${taskerId}`);\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  return (\n    <div>\n      <h2>My Tasks</h2>\n      {tasks.map((task, index) => (\n        <div key={index} className=\"task-card\">\n          <p><strong>Customer Name:</strong> {task.customerName}</p>\n          <p><strong>Phone Number:</strong> {task.customerPhone}</p>\n          <p><strong>Service:</strong> {task.serviceName}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MyTasksPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnD,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,wBAAwBJ,QAAQ,EAAE,CAAC;QACpEF,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDP,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBf,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBrB,OAAA;MAAiBsB,SAAS,EAAC,WAAW;MAAAR,QAAA,gBACpCd,OAAA;QAAAc,QAAA,gBAAGd,OAAA;UAAAc,QAAA,EAAQ;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACG,YAAY;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1DlB,OAAA;QAAAc,QAAA,gBAAGd,OAAA;UAAAc,QAAA,EAAQ;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACI,aAAa;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1DlB,OAAA;QAAAc,QAAA,gBAAGd,OAAA;UAAAc,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACK,WAAW;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAH3CG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BID,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}