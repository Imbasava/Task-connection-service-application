{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskerProfile() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [address, setAddress] = useState('');\n  const userID = localStorage.getItem('userID'); // Get user ID from local storage\n  const userName = localStorage.getItem('nameame'); // Get user name from local storage\n\n  const handleImageChange = event => {\n    setImage(event.target.files[0]);\n  };\n  const handleAddressChange = event => {\n    setAddress(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('address', address);\n    formData.append('userID', userID); // Send userID as well\n\n    try {\n      const response = await fetch('/api/tasker-profile', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        // Handle success (e.g., show a success message)\n        console.log('Profile updated successfully');\n      } else {\n        // Handle error (e.g., show an error message)\n        console.error('Error updating profile');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasker-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [userName, \"'s Tasker Profile\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleImageChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: address,\n            onChange: handleAddressChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskerProfile, \"VEIKqMdtviA//E+Fbgtg0BEVQAg=\");\n_c = TaskerProfile;\nexport default TaskerProfile;\nvar _c;\n$RefreshReg$(_c, \"TaskerProfile\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskerProfile","_s","image","setImage","address","setAddress","userID","localStorage","getItem","userName","handleImageChange","event","target","files","handleAddressChange","value","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/ProfilePage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TaskerProfile() {\n  const [image, setImage] = useState(null);\n  const [address, setAddress] = useState('');\n  const userID = localStorage.getItem('userID');  // Get user ID from local storage\n  const userName = localStorage.getItem('nameame'); // Get user name from local storage\n\n  const handleImageChange = (event) => {\n    setImage(event.target.files[0]);\n  };\n\n  const handleAddressChange = (event) => {\n    setAddress(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('address', address);\n    formData.append('userID', userID);  // Send userID as well\n\n    try {\n      const response = await fetch('/api/tasker-profile', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        // Handle success (e.g., show a success message)\n        console.log('Profile updated successfully');\n      } else {\n        // Handle error (e.g., show an error message)\n        console.error('Error updating profile');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"tasker-profile\">\n      <h1>{userName}'s Tasker Profile</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            Upload Image:\n            <input type=\"file\" onChange={handleImageChange} required />\n          </label>\n        </div>\n        <div>\n          <label>\n            Address:\n            <input type=\"text\" value={address} onChange={handleAddressChange} required />\n          </label>\n        </div>\n        <button type=\"submit\">Submit Profile</button>\n      </form>\n    </div>\n  );\n}\n\nexport default TaskerProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}