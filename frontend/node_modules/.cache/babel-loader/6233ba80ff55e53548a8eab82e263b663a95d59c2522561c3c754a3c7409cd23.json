{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/Taskers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskersList() {\n  _s();\n  var _location$state;\n  const [taskers, setTaskers] = useState([]);\n  const location = useLocation();\n  const serviceId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.serviceId;\n  useEffect(() => {\n    // Function to fetch taskers based on the serviceId\n    const fetchTaskers = async () => {\n      try {\n        // Make sure to adjust the port if your backend is running on a different one (e.g., 5000)\n        const response = await axios.get('http://localhost:5000/api/Tasker/Taskers', {\n          params: {\n            serviceId\n          }\n        });\n        setTaskers(response.data);\n      } catch (error) {\n        console.error('Error fetching taskers:', error);\n      }\n    };\n\n    // Fetch taskers only if serviceId is available\n    if (serviceId) {\n      fetchTaskers();\n    }\n  }, [serviceId]);\n\n  // Handle booking action\n  const handleBookTasker = taskerId => {\n    // console.log(\"Booking tasker with ID: ${taskerId}\");\n    // Implement booking logic here if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800\",\n      children: \"Available Taskers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 mt-8\",\n      children: taskers.length > 0 ? taskers.map(tasker => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-gray-200 rounded-lg p-4 shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: tasker.taskerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Experience: \", tasker.experience, \" years\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hourly Rate: $\", tasker.hourlyRate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBookTasker(tasker.tasker_Profile_Id),\n          className: \"mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n          children: \"Book Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, tasker.tasker_Profile_Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No taskers available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskersList, \"EkXpAIY0wbN3+GV+hKwwgQX3R8I=\", false, function () {\n  return [useLocation];\n});\n_c = TaskersList;\nexport default TaskersList;\nvar _c;\n$RefreshReg$(_c, \"TaskersList\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","jsxDEV","_jsxDEV","TaskersList","_s","_location$state","taskers","setTaskers","location","serviceId","state","fetchTaskers","response","get","params","data","error","console","handleBookTasker","taskerId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","tasker","taskerName","experience","hourlyRate","onClick","tasker_Profile_Id","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/Taskers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\n\nfunction TaskersList() {\n  const [taskers, setTaskers] = useState([]);\n  const location = useLocation();\n  const serviceId = location.state?.serviceId;\n\n  useEffect(() => {\n    // Function to fetch taskers based on the serviceId\n    const fetchTaskers = async () => {\n      try {\n        // Make sure to adjust the port if your backend is running on a different one (e.g., 5000)\n        const response = await axios.get('http://localhost:5000/api/Tasker/Taskers', {\n          params: { serviceId }\n        });\n        setTaskers(response.data);\n      } catch (error) {\n        console.error('Error fetching taskers:', error);\n      }\n    };\n\n    // Fetch taskers only if serviceId is available\n    if (serviceId) {\n      fetchTaskers();\n    }\n  }, [serviceId]);\n\n  // Handle booking action\n  const handleBookTasker = (taskerId) => {\n   // console.log(\"Booking tasker with ID: ${taskerId}\");\n    // Implement booking logic here if needed\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-3xl font-bold text-gray-800\">Available Taskers</h1>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 mt-8\">\n        {taskers.length > 0 ? (\n          taskers.map(tasker => (\n            <div key={tasker.tasker_Profile_Id} className=\"border border-gray-200 rounded-lg p-4 shadow-md\">\n              <h2 className=\"text-xl font-bold\">{tasker.taskerName}</h2>\n              <p>Experience: {tasker.experience} years</p>\n              <p>Hourly Rate: ${tasker.hourlyRate}</p>\n              <button\n                onClick={() => handleBookTasker(tasker.tasker_Profile_Id)}\n                className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n              >\n                Book Now\n              </button>\n            </div>\n          ))\n        ) : (\n          <p>No taskers available.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TaskersList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}