{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\n/* import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackgroundImage from './images/Backgroundimage.png'; // Adjusted path to import the image\n\n\nconst FirstHomePage = () => {\n    const navigate = useNavigate();\n\n    return (\n        <div className=\"min-h-screen flex flex-col\">\n           \n            <div className=\"relative h-screen bg-cover bg-center\" style={{ backgroundImage: `url(${BackgroundImage})` }}>\n                <div className=\"absolute inset-0 bg-black opacity-50\"></div>\n\n                <div className=\"relative z-10 flex flex-col items-center justify-center h-full text-center text-white\">\n                    <h1 className=\"text-4xl md:text-6xl font-bold mb-4\">Choose Your Option to Get Started</h1>\n                    <p className=\"text-lg md:text-2xl mb-8\">Explore trusted professionals and get started today!</p>\n                    <div className=\"space-x-4\">\n                      \n                        <button \n                            className=\"bg-blue-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-blue-600 transition duration-300\"\n                            onClick={() => {\n                                const role = sessionStorage.getItem('role');\n                        \n                                if (role === 'customer') {\n                                    alert('Access Denied: Customers are not allowed to provide services.');\n                                    // Optionally, redirect to a different page\n                                    navigate('/');\n                                } else {\n                                    // Allow tasker (or null role) to navigate\n                                    navigate('/Customerhome');\n                                }\n                            }}\n                        >\n                            Provide Service\n                            </button>\n                     \n                        <button \n                            className=\"bg-green-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-green-600 transition duration-300\"\n                            onClick={() => navigate('/Taskerhome')} // Navigate to TaskerHome\n                        >\n                            Find Service\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FirstHomePage; */\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackgroundImage from './images/Backgroundimage.png'; // Adjust the path to your background image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirstHomePage = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch user role from backend on page load\n    const fetchUserRole = async () => {\n      try {\n        const userId = sessionStorage.getItem('userID');\n        const response = await fetch(`http://localhost:5000/api/get-user-role?userId=${userId}`);\n        if (response.ok) {\n          const data = await response.json();\n          sessionStorage.setItem('role', data.role);\n        } else {\n          console.error('Failed to fetch user role');\n        }\n      } catch (error) {\n        console.error('Error fetching user role:', error);\n      }\n    };\n    fetchUserRole();\n  }, []);\n  const handleFindServiceClick = () => {\n    const role = sessionStorage.getItem('role');\n    if (role === 'tasker') {\n      alert('Access Denied: Taskers are not allowed to use this service.');\n    } else {\n      navigate('/Taskerhome');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative h-screen bg-cover bg-center\",\n      style: {\n        backgroundImage: `url(${BackgroundImage})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-black opacity-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10 flex flex-col items-center justify-center h-full text-center text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl md:text-6xl font-bold mb-4\",\n          children: \"Choose Your Option to Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg md:text-2xl mb-8\",\n          children: \"Explore trusted professionals and get started today!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-blue-600 transition duration-300\",\n            onClick: () => {\n              const role = sessionStorage.getItem('role');\n              if (role === 'customer') {\n                alert('Access Denied: Customers are not allowed to provide services.');\n                navigate('/');\n              } else {\n                navigate('/Customerhome');\n              }\n            },\n            children: \"Provide Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-green-600 transition duration-300\",\n            onClick: handleFindServiceClick,\n            children: \"Find Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(FirstHomePage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = FirstHomePage;\nexport default FirstHomePage;\nvar _c;\n$RefreshReg$(_c, \"FirstHomePage\");","map":{"version":3,"names":["React","useEffect","useNavigate","BackgroundImage","jsxDEV","_jsxDEV","FirstHomePage","_s","navigate","fetchUserRole","userId","sessionStorage","getItem","response","fetch","ok","data","json","setItem","role","console","error","handleFindServiceClick","alert","className","children","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/Home.js"],"sourcesContent":["/* import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackgroundImage from './images/Backgroundimage.png'; // Adjusted path to import the image\n\n\nconst FirstHomePage = () => {\n    const navigate = useNavigate();\n\n    return (\n        <div className=\"min-h-screen flex flex-col\">\n           \n            <div className=\"relative h-screen bg-cover bg-center\" style={{ backgroundImage: `url(${BackgroundImage})` }}>\n                <div className=\"absolute inset-0 bg-black opacity-50\"></div>\n\n                <div className=\"relative z-10 flex flex-col items-center justify-center h-full text-center text-white\">\n                    <h1 className=\"text-4xl md:text-6xl font-bold mb-4\">Choose Your Option to Get Started</h1>\n                    <p className=\"text-lg md:text-2xl mb-8\">Explore trusted professionals and get started today!</p>\n                    <div className=\"space-x-4\">\n                      \n                        <button \n                            className=\"bg-blue-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-blue-600 transition duration-300\"\n                            onClick={() => {\n                                const role = sessionStorage.getItem('role');\n                        \n                                if (role === 'customer') {\n                                    alert('Access Denied: Customers are not allowed to provide services.');\n                                    // Optionally, redirect to a different page\n                                    navigate('/');\n                                } else {\n                                    // Allow tasker (or null role) to navigate\n                                    navigate('/Customerhome');\n                                }\n                            }}\n                        >\n                            Provide Service\n                            </button>\n                     \n                        <button \n                            className=\"bg-green-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-green-600 transition duration-300\"\n                            onClick={() => navigate('/Taskerhome')} // Navigate to TaskerHome\n                        >\n                            Find Service\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FirstHomePage; */\n\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackgroundImage from './images/Backgroundimage.png'; // Adjust the path to your background image\n\nconst FirstHomePage = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Fetch user role from backend on page load\n        const fetchUserRole = async () => {\n            try {\n                const userId = sessionStorage.getItem('userID');\n                const response = await fetch(`http://localhost:5000/api/get-user-role?userId=${userId}`);\n                \n                if (response.ok) {\n                    const data = await response.json();\n                    sessionStorage.setItem('role', data.role);\n                } else {\n                    console.error('Failed to fetch user role');\n                }\n            } catch (error) {\n                console.error('Error fetching user role:', error);\n            }\n        };\n\n        fetchUserRole();\n    }, []);\n\n    const handleFindServiceClick = () => {\n        const role = sessionStorage.getItem('role');\n        \n        if (role === 'tasker') {\n            alert('Access Denied: Taskers are not allowed to use this service.');\n        } else {\n            navigate('/Taskerhome');\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen flex flex-col\">\n            {/* Hero Section with Background Image */}\n            <div className=\"relative h-screen bg-cover bg-center\" style={{ backgroundImage: `url(${BackgroundImage})` }}>\n                <div className=\"absolute inset-0 bg-black opacity-50\"></div> {/* Dark overlay */}\n\n                {/* Centered Content */}\n                <div className=\"relative z-10 flex flex-col items-center justify-center h-full text-center text-white\">\n                    <h1 className=\"text-4xl md:text-6xl font-bold mb-4\">Choose Your Option to Get Started</h1>\n                    <p className=\"text-lg md:text-2xl mb-8\">Explore trusted professionals and get started today!</p>\n                    <div className=\"space-x-4\">\n                        {/* Navigate to Customer Homepage */}\n                        <button \n                            className=\"bg-blue-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-blue-600 transition duration-300\"\n                            onClick={() => {\n                                const role = sessionStorage.getItem('role');\n                                \n                                if (role === 'customer') {\n                                    alert('Access Denied: Customers are not allowed to provide services.');\n                                    navigate('/');\n                                } else {\n                                    navigate('/Customerhome');\n                                }\n                            }}\n                        >\n                            Provide Service\n                        </button>\n                        {/* Navigate to Tasker Homepage */}\n                        <button \n                            className=\"bg-green-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-green-600 transition duration-300\"\n                            onClick={handleFindServiceClick}\n                        >\n                            Find Service\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FirstHomePage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkDJ,MAAM,EAAE,CAAC;QAExF,IAAIG,QAAQ,CAACE,EAAE,EAAE;UACb,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,cAAc,CAACO,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,IAAI,CAAC;QAC7C,CAAC,MAAM;UACHC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDZ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,sBAAsB,GAAGA,CAAA,KAAM;IACjC,MAAMH,IAAI,GAAGR,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IAE3C,IAAIO,IAAI,KAAK,QAAQ,EAAE;MACnBI,KAAK,CAAC,6DAA6D,CAAC;IACxE,CAAC,MAAM;MACHf,QAAQ,CAAC,aAAa,CAAC;IAC3B;EACJ,CAAC;EAED,oBACIH,OAAA;IAAKmB,SAAS,EAAC,4BAA4B;IAAAC,QAAA,eAEvCpB,OAAA;MAAKmB,SAAS,EAAC,sCAAsC;MAACE,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAOxB,eAAe;MAAI,CAAE;MAAAsB,QAAA,gBACxGpB,OAAA;QAAKmB,SAAS,EAAC;MAAsC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC,eAG7D1B,OAAA;QAAKmB,SAAS,EAAC,uFAAuF;QAAAC,QAAA,gBAClGpB,OAAA;UAAImB,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAAC;QAAiC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1F1B,OAAA;UAAGmB,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EAAC;QAAoD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChG1B,OAAA;UAAKmB,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAEtBpB,OAAA;YACImB,SAAS,EAAC,+GAA+G;YACzHQ,OAAO,EAAEA,CAAA,KAAM;cACX,MAAMb,IAAI,GAAGR,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;cAE3C,IAAIO,IAAI,KAAK,UAAU,EAAE;gBACrBI,KAAK,CAAC,+DAA+D,CAAC;gBACtEf,QAAQ,CAAC,GAAG,CAAC;cACjB,CAAC,MAAM;gBACHA,QAAQ,CAAC,eAAe,CAAC;cAC7B;YACJ,CAAE;YAAAiB,QAAA,EACL;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAET1B,OAAA;YACImB,SAAS,EAAC,iHAAiH;YAC3HQ,OAAO,EAAEV,sBAAuB;YAAAG,QAAA,EACnC;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CAzEID,aAAa;EAAA,QACEJ,WAAW;AAAA;AAAA+B,EAAA,GAD1B3B,aAAa;AA2EnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}