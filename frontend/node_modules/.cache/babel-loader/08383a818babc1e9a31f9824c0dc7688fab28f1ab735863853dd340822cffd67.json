{"ast":null,"code":"/* import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackgroundImage from './images/Backgroundimage.png'; // Adjusted path to import the image\n\n\nconst FirstHomePage = () => {\n    const navigate = useNavigate();\n\n    return (\n        <div className=\"min-h-screen flex flex-col\">\n           \n            <div className=\"relative h-screen bg-cover bg-center\" style={{ backgroundImage: `url(${BackgroundImage})` }}>\n                <div className=\"absolute inset-0 bg-black opacity-50\"></div>\n\n                <div className=\"relative z-10 flex flex-col items-center justify-center h-full text-center text-white\">\n                    <h1 className=\"text-4xl md:text-6xl font-bold mb-4\">Choose Your Option to Get Started</h1>\n                    <p className=\"text-lg md:text-2xl mb-8\">Explore trusted professionals and get started today!</p>\n                    <div className=\"space-x-4\">\n                      \n                        <button \n                            className=\"bg-blue-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-blue-600 transition duration-300\"\n                            onClick={() => {\n                                const role = sessionStorage.getItem('role');\n                        \n                                if (role === 'customer') {\n                                    alert('Access Denied: Customers are not allowed to provide services.');\n                                    // Optionally, redirect to a different page\n                                    navigate('/');\n                                } else {\n                                    // Allow tasker (or null role) to navigate\n                                    navigate('/Customerhome');\n                                }\n                            }}\n                        >\n                            Provide Service\n                            </button>\n                     \n                        <button \n                            className=\"bg-green-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-green-600 transition duration-300\"\n                            onClick={() => navigate('/Taskerhome')} // Navigate to TaskerHome\n                        >\n                            Find Service\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FirstHomePage; */\n/* \nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackgroundImage from './images/Backgroundimage.png'; // Adjust path to import the image\n\nconst FirstHomePage = () => {\n    const navigate = useNavigate();\n    const [role, setRole] = useState(null); // State to store the user role\n    const [loading, setLoading] = useState(true); // State to handle loading\n    const userId = sessionStorage.getItem('userID'); // Get userId from sessionStorage\n\n    useEffect(() => {\n        // Check if userId is available in session storage\n        if (userId) {\n            // If userId is present, fetch user role from the backend\n            fetch(`http://localhost:5000/api/get-user-role?userId=${userId}`)\n                .then((response) => {\n                    if (!response.ok) {\n                        throw new Error(`HTTP error! Status: ${response.status}`);\n                    }\n                    return response.json();\n                })\n                .then((data) => {\n                    if (data.success) {\n                        setRole(data.role); // Set the role from the response\n                        if (data.taskerId) {\n                            sessionStorage.setItem('taskerId', data.taskerId);\n                        }\n                    } else {\n                        console.error('Error fetching user role:', data.message);\n                    }\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    setLoading(false);\n                });\n        } else {\n            // If userId is not in session storage, set loading to false\n            setLoading(false);\n        }\n    }, [userId]);\n    \n\n    // If still loading or userId is not found, show loading or error message\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"min-h-screen flex flex-col\">\n            \n            <div className=\"relative h-screen bg-cover bg-center\" style={{ backgroundImage: `url(${BackgroundImage})` }}>\n                <div className=\"absolute inset-0 bg-black opacity-50\"></div> \n\n               \n                <div className=\"relative z-10 flex flex-col items-center justify-center h-full text-center text-white\">\n                    <h1 className=\"text-4xl md:text-6xl font-bold mb-4\">Choose Your Option to Get Started</h1>\n                    <p className=\"text-lg md:text-2xl mb-8\">Explore trusted professionals and get started today!</p>\n                    <div className=\"space-x-4\">\n                     \n                        <button\n                            className=\"bg-blue-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-blue-600 transition duration-300\"\n                            onClick={() => {\n                                // Only allow navigation if role is not 'tasker'\n                                    navigate('/Customerhome');\n                            }}\n                        >\n                            Provide Service\n                        </button>\n                        \n                        <button\n                            className=\"bg-green-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-green-600 transition duration-300\"\n                            onClick={() => {\n                                if (role === 'tasker') {\n                                    alert('Access Denied: Taskers cannot provide services.');\n                                }else {\n                                    navigate('/Taskerhome');\n                                }\n                            }}\n                        >\n                            Find Service\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FirstHomePage;\n */","map":{"version":3,"names":[],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/Home.js"],"sourcesContent":["/* import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackgroundImage from './images/Backgroundimage.png'; // Adjusted path to import the image\n\n\nconst FirstHomePage = () => {\n    const navigate = useNavigate();\n\n    return (\n        <div className=\"min-h-screen flex flex-col\">\n           \n            <div className=\"relative h-screen bg-cover bg-center\" style={{ backgroundImage: `url(${BackgroundImage})` }}>\n                <div className=\"absolute inset-0 bg-black opacity-50\"></div>\n\n                <div className=\"relative z-10 flex flex-col items-center justify-center h-full text-center text-white\">\n                    <h1 className=\"text-4xl md:text-6xl font-bold mb-4\">Choose Your Option to Get Started</h1>\n                    <p className=\"text-lg md:text-2xl mb-8\">Explore trusted professionals and get started today!</p>\n                    <div className=\"space-x-4\">\n                      \n                        <button \n                            className=\"bg-blue-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-blue-600 transition duration-300\"\n                            onClick={() => {\n                                const role = sessionStorage.getItem('role');\n                        \n                                if (role === 'customer') {\n                                    alert('Access Denied: Customers are not allowed to provide services.');\n                                    // Optionally, redirect to a different page\n                                    navigate('/');\n                                } else {\n                                    // Allow tasker (or null role) to navigate\n                                    navigate('/Customerhome');\n                                }\n                            }}\n                        >\n                            Provide Service\n                            </button>\n                     \n                        <button \n                            className=\"bg-green-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-green-600 transition duration-300\"\n                            onClick={() => navigate('/Taskerhome')} // Navigate to TaskerHome\n                        >\n                            Find Service\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FirstHomePage; */\n/* \nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackgroundImage from './images/Backgroundimage.png'; // Adjust path to import the image\n\nconst FirstHomePage = () => {\n    const navigate = useNavigate();\n    const [role, setRole] = useState(null); // State to store the user role\n    const [loading, setLoading] = useState(true); // State to handle loading\n    const userId = sessionStorage.getItem('userID'); // Get userId from sessionStorage\n\n    useEffect(() => {\n        // Check if userId is available in session storage\n        if (userId) {\n            // If userId is present, fetch user role from the backend\n            fetch(`http://localhost:5000/api/get-user-role?userId=${userId}`)\n                .then((response) => {\n                    if (!response.ok) {\n                        throw new Error(`HTTP error! Status: ${response.status}`);\n                    }\n                    return response.json();\n                })\n                .then((data) => {\n                    if (data.success) {\n                        setRole(data.role); // Set the role from the response\n                        if (data.taskerId) {\n                            sessionStorage.setItem('taskerId', data.taskerId);\n                        }\n                    } else {\n                        console.error('Error fetching user role:', data.message);\n                    }\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    setLoading(false);\n                });\n        } else {\n            // If userId is not in session storage, set loading to false\n            setLoading(false);\n        }\n    }, [userId]);\n    \n\n    // If still loading or userId is not found, show loading or error message\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"min-h-screen flex flex-col\">\n            \n            <div className=\"relative h-screen bg-cover bg-center\" style={{ backgroundImage: `url(${BackgroundImage})` }}>\n                <div className=\"absolute inset-0 bg-black opacity-50\"></div> \n\n               \n                <div className=\"relative z-10 flex flex-col items-center justify-center h-full text-center text-white\">\n                    <h1 className=\"text-4xl md:text-6xl font-bold mb-4\">Choose Your Option to Get Started</h1>\n                    <p className=\"text-lg md:text-2xl mb-8\">Explore trusted professionals and get started today!</p>\n                    <div className=\"space-x-4\">\n                     \n                        <button\n                            className=\"bg-blue-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-blue-600 transition duration-300\"\n                            onClick={() => {\n                                // Only allow navigation if role is not 'tasker'\n                                    navigate('/Customerhome');\n                            }}\n                        >\n                            Provide Service\n                        </button>\n                        \n                        <button\n                            className=\"bg-green-500 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:bg-green-600 transition duration-300\"\n                            onClick={() => {\n                                if (role === 'tasker') {\n                                    alert('Access Denied: Taskers cannot provide services.');\n                                }else {\n                                    navigate('/Taskerhome');\n                                }\n                            }}\n                        >\n                            Find Service\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FirstHomePage;\n */"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}