{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/pages/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskerProfile() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [address, setAddress] = useState('');\n  const [userName, setUserName] = useState('');\n  const userID = localStorage.getItem('userID'); // Retrieve user ID from local storage\n  const Name = localStorage.getItem('name');\n  useEffect(() => {\n    // Fetch user data to get the name using userID\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`/users/${userID}`); // Fetch user details using userID\n        if (!response.ok) {\n          throw new Error('Failed to fetch user data');\n        }\n        const data = await response.json();\n        setUserName(data.name); // Assuming the API returns an object with a 'name' property\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, [userID]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('address', address);\n    formData.append('userID', userID); // Include user ID for the tasker profile\n\n    try {\n      const response = await fetch('/tasker-profile', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        // Handle successful submission (e.g., show success message)\n        alert('Profile updated successfully!');\n      } else {\n        // Handle error (e.g., show error message)\n        alert('Failed to update profile.');\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800\",\n      children: \"Tasker Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userName,\n          readOnly: true,\n          className: \"border rounded p-2 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          className: \"border rounded p-2 w-full\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700\",\n          children: \"Profile Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setImage(e.target.files[0]),\n          className: \"border rounded p-2 w-full\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-4 bg-blue-500 text-white p-2 rounded\",\n        children: \"Save Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskerProfile, \"3OB98ZUeEoSeS3E7GofYhtO6fn4=\");\n_c = TaskerProfile;\nexport default TaskerProfile;\nvar _c;\n$RefreshReg$(_c, \"TaskerProfile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskerProfile","_s","image","setImage","address","setAddress","userName","setUserName","userID","localStorage","getItem","Name","fetchUserData","response","fetch","ok","Error","data","json","name","error","console","handleSubmit","e","preventDefault","formData","FormData","append","method","body","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","readOnly","onChange","target","required","files","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/pages/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction TaskerProfile() {\n  const [image, setImage] = useState(null);\n  const [address, setAddress] = useState('');\n  const [userName, setUserName] = useState('');\n  const userID = localStorage.getItem('userID'); // Retrieve user ID from local storage\n  const Name = localStorage.getItem('name');\n  useEffect(() => {\n    // Fetch user data to get the name using userID\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`/users/${userID}`); // Fetch user details using userID\n        if (!response.ok) {\n          throw new Error('Failed to fetch user data');\n        }\n        const data = await response.json();\n        setUserName(data.name); // Assuming the API returns an object with a 'name' property\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n\n    fetchUserData();\n  }, [userID]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('address', address);\n    formData.append('userID', userID); // Include user ID for the tasker profile\n\n    try {\n      const response = await fetch('/tasker-profile', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        // Handle successful submission (e.g., show success message)\n        alert('Profile updated successfully!');\n      } else {\n        // Handle error (e.g., show error message)\n        alert('Failed to update profile.');\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-3xl font-bold text-gray-800\">Tasker Profile</h1>\n      <form onSubmit={handleSubmit} className=\"mt-4\">\n        <div>\n          <label className=\"block text-gray-700\">Name:</label>\n          <input type=\"text\" value={userName} readOnly className=\"border rounded p-2 w-full\" />\n        </div>\n        <div className=\"mt-4\">\n          <label className=\"block text-gray-700\">Address:</label>\n          <input\n            type=\"text\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            className=\"border rounded p-2 w-full\"\n            required\n          />\n        </div>\n        <div className=\"mt-4\">\n          <label className=\"block text-gray-700\">Profile Image:</label>\n          <input\n            type=\"file\"\n            onChange={(e) => setImage(e.target.files[0])}\n            className=\"border rounded p-2 w-full\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"mt-4 bg-blue-500 text-white p-2 rounded\">\n          Save Profile\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default TaskerProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}