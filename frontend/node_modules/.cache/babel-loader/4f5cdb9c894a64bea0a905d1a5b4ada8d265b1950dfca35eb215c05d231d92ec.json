{"ast":null,"code":"var _jsxFileName = \"/home/basava/Documents/TASKflow/frontend/src/App.js\",\n  _s = $RefreshSig$();\n/*\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Services from './pages/Services';\nimport SignUp from './pages/SignUp';\nimport SignIn from './pages/SignIn';\nimport BecomeTasker from './pages/BecomeTasker';\nimport CleaningWork from './pages/CleaningWork';\nimport ConstructionWork from './pages/ConstructionWork';\nimport DeliveryWork from './pages/DeliveryWork';\nimport FieldWork from './pages/FieldWork';\nimport Footer from './components/Footer';\nimport AuthLanding from './pages/AuthLanding';\n//const userRoutes = require('../backend/routes/user');\n//app.use('/user', userRoutes);\nimport { AuthProvider } from './context/AuthContext';\n\nfunction App() {\n  return (\n    <AuthProvider>\n    <Router>\n      <div className=\"flex flex-col min-h-screen\">\n        <Navbar />\n        <div className=\"flex-grow\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/services\" element={<Services />} />\n            <Route path=\"/authlanding\" element={<AuthLanding />} />\n            <Route path=\"/signin\" element={<SignIn />} />  \n            <Route path=\"/signup\" element={<SignUp />} />  \n            <Route path=\"/become-tasker\" element={<BecomeTasker />} />\n            <Route path=\"/cleaning-work\" element={<CleaningWork />} />\n            <Route path=\"/construction-work\" element={<ConstructionWork />} />\n            <Route path=\"/delivery-work\" element={<DeliveryWork />} />\n            <Route path=\"/field-work\" element={<FieldWork />} />\n            <Route path=\"/dashboard\" element={<TaskerDashboard />} />\n              \n            <Route path=\"/create-profile\" element={<CreateProfile />} />\n          </Routes>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Services from './pages/Services';\nimport SignUp from './pages/SignUp';\nimport Login from './pages/SignIn';\nimport BecomeTasker from './pages/BecomeTasker';\nimport CleaningWork from './pages/CleaningWork';\nimport ConstructionWork from './pages/ConstructionWork';\nimport DeliveryWork from './pages/DeliveryWork';\nimport FieldWork from './pages/FieldWork';\nimport SignUpLogin from './pages/SignUpLogin';\nimport TaskerDashboard from './pages/TaskerDashboard';\nimport CreateProfile from './pages/CreateProfile'; // Import CreateProfile component\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Simulating authentication status (for other routes if needed)\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Mocked logic to check authentication status (replace with real logic)\n  useEffect(() => {\n    const authStatus = localStorage.getItem('isAuthenticated');\n    setIsAuthenticated(!!authStatus); // Convert to boolean\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/services\",\n            element: /*#__PURE__*/_jsxDEV(Services, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/become-tasker\",\n            element: /*#__PURE__*/_jsxDEV(TaskerDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 24\n            }, this) // Directly navigate to TaskerDashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cleaning-work\",\n            element: /*#__PURE__*/_jsxDEV(CleaningWork, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/construction-work\",\n            element: /*#__PURE__*/_jsxDEV(ConstructionWork, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/delivery-work\",\n            element: /*#__PURE__*/_jsxDEV(DeliveryWork, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/field-work\",\n            element: /*#__PURE__*/_jsxDEV(FieldWork, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(TaskerDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/create-profile\",\n            element: /*#__PURE__*/_jsxDEV(CreateProfile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navbar","Home","Services","SignUp","Login","BecomeTasker","CleaningWork","ConstructionWork","DeliveryWork","FieldWork","SignUpLogin","TaskerDashboard","CreateProfile","Footer","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","authStatus","localStorage","getItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/basava/Documents/TASKflow/frontend/src/App.js"],"sourcesContent":["/*\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Services from './pages/Services';\nimport SignUp from './pages/SignUp';\nimport SignIn from './pages/SignIn';\nimport BecomeTasker from './pages/BecomeTasker';\nimport CleaningWork from './pages/CleaningWork';\nimport ConstructionWork from './pages/ConstructionWork';\nimport DeliveryWork from './pages/DeliveryWork';\nimport FieldWork from './pages/FieldWork';\nimport Footer from './components/Footer';\nimport AuthLanding from './pages/AuthLanding';\n//const userRoutes = require('../backend/routes/user');\n//app.use('/user', userRoutes);\nimport { AuthProvider } from './context/AuthContext';\n\nfunction App() {\n  return (\n    <AuthProvider>\n    <Router>\n      <div className=\"flex flex-col min-h-screen\">\n        <Navbar />\n        <div className=\"flex-grow\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/services\" element={<Services />} />\n            <Route path=\"/authlanding\" element={<AuthLanding />} />\n            <Route path=\"/signin\" element={<SignIn />} />  \n            <Route path=\"/signup\" element={<SignUp />} />  \n            <Route path=\"/become-tasker\" element={<BecomeTasker />} />\n            <Route path=\"/cleaning-work\" element={<CleaningWork />} />\n            <Route path=\"/construction-work\" element={<ConstructionWork />} />\n            <Route path=\"/delivery-work\" element={<DeliveryWork />} />\n            <Route path=\"/field-work\" element={<FieldWork />} />\n            <Route path=\"/dashboard\" element={<TaskerDashboard />} />\n              \n            <Route path=\"/create-profile\" element={<CreateProfile />} />\n          </Routes>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Services from './pages/Services';\nimport SignUp from './pages/SignUp';\nimport Login from './pages/SignIn';\nimport BecomeTasker from './pages/BecomeTasker';\nimport CleaningWork from './pages/CleaningWork';\nimport ConstructionWork from './pages/ConstructionWork';\nimport DeliveryWork from './pages/DeliveryWork';\nimport FieldWork from './pages/FieldWork';\nimport SignUpLogin from './pages/SignUpLogin';\nimport TaskerDashboard from './pages/TaskerDashboard';\nimport CreateProfile from './pages/CreateProfile'; // Import CreateProfile component\nimport Footer from './components/Footer';\n\nfunction App() {\n  // Simulating authentication status (for other routes if needed)\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Mocked logic to check authentication status (replace with real logic)\n  useEffect(() => {\n    const authStatus = localStorage.getItem('isAuthenticated');\n    setIsAuthenticated(!!authStatus); // Convert to boolean\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"flex flex-col min-h-screen\">\n        <Navbar />\n        <div className=\"flex-grow\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/services\" element={<Services />} />\n            <Route path=\"/signup\" element={<SignUp />} />\n            <Route path=\"/login\" element={<Login />} />\n\n            {/* Route for Become a Tasker, no authentication check */}\n            <Route\n              path=\"/become-tasker\"\n              element={<TaskerDashboard />} // Directly navigate to TaskerDashboard\n            />\n\n            <Route path=\"/cleaning-work\" element={<CleaningWork />} />\n            <Route path=\"/construction-work\" element={<ConstructionWork />} />\n            <Route path=\"/delivery-work\" element={<DeliveryWork />} />\n            <Route path=\"/field-work\" element={<FieldWork />} />\n\n            {/* Tasker Dashboard Route */}\n            <Route path=\"/dashboard\" element={<TaskerDashboard />} />\n\n            {/* Create Profile Route */}\n            <Route path=\"/create-profile\" element={<CreateProfile />} />\n          </Routes>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}